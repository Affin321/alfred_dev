@import "tailwindcss";

@plugin "tailwindcss-animate";

@custom-variant dark (&:where(.dark, .dark *));

/* 
 * =================================
 * 1. THEME & COLORS (Production Match)
 * =================================
 */

:root,
.dark {
  --radius: 0.625rem;
  --border-radius-standard: 1.9rem;
}

:root {
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --destructive-foreground: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.11 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.145 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.16 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.985 0 0);
  --primary-foreground: oklch(0.11 0 0);
  --secondary: oklch(0.2 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.2 0 0);
  --muted-foreground: oklch(0.75 0 0);
  --accent: oklch(0.2 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.65 0.25 25.723);
  --destructive-foreground: oklch(0.985 0 0);
  --border: oklch(0.2 0 0);
  --input: oklch(0.18 0 0);
  --ring: oklch(0.439 0 0);
}

/* Theme color mapping */
@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

/* 
 * =================================
 * 2. GLOBAL BASE STYLES
 * =================================
 */
* {
  scrollbar-width: none;
  -ms-overflow-style: none;
}
*::-webkit-scrollbar {
  display: none;
}

/*
 * =================================
 * 3. WIDGET CONTAINER STYLES (Production Match)
 * =================================
 */

/* Widget Container - This is what makes widgets look polished */
.widget-container {
  border-radius: var(--border-radius-standard);
  @apply p-4 overflow-hidden h-full w-full flex flex-col relative break-words;
  background-color: var(--card);
  color: var(--card-foreground);
  border: 1px solid var(--border);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
  
  /* Prevent text selection during interaction */
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Widget Interaction Styles */
.widget-drag-handle {
  @apply cursor-move touch-none select-none;
}

.widget-container > div:not(.widget-drag-handle) {
  @apply cursor-default pointer-events-auto;
}

/* Widget Interactive Elements */
.widget-container a,
.widget-container button:not(.settings-button) {
  @apply cursor-pointer pointer-events-auto relative z-10;
}

.widget-container *:not(.widget-drag-handle):not(.settings-button) {
  @apply pointer-events-auto;
}

/* Widget Settings Button */
.widget-container .settings-button {
  @apply cursor-pointer z-10 opacity-0 transition-opacity duration-200 ease-in-out pointer-events-auto;
  border-radius: var(--border-radius-standard);
}

.widget-container:hover .settings-button {
  @apply opacity-100;
}

.settings-button,
.settings-button * {
  @apply pointer-events-auto;
}

/* Override for widget buttons to ensure they're always clickable */
.widget-container button {
  @apply pointer-events-auto relative z-50;
}

/* When drag is complete, ensure buttons are REALLY clickable */
body.drag-complete .widget-container button {
  @apply pointer-events-auto relative z-[9999];
}

/* 
 * =================================
 * 4. GRID LAYOUT INTERACTION STYLES (Production Match)
 * =================================
 */

/* Base Grid Item */
.react-grid-item {
  @apply transition-all duration-300 ease-in-out;
  -webkit-user-drag: none;
  border-radius: var(--border-radius-standard);
  backface-visibility: hidden;
}

/* Mouse interaction states */
.react-grid-item:active,
.react-grid-item:focus,
.react-grid-item:active *,
.react-grid-item:focus * {
  @apply select-none;
}

/* Active dragging state with enhanced visual feedback */
.react-grid-item.react-draggable-dragging {
  @apply z-[100] shadow-xl;
  border-radius: var(--border-radius-standard) !important;
  transition: box-shadow 0.2s ease-out !important;
  cursor: grabbing !important;
  opacity: 0.92;
  border: 1px solid rgba(0, 0, 0, 0.08);
}

/* Active resizing state */
.react-grid-item.resizing {
  @apply z-10 shadow-lg;
  transition: none;
  cursor: nwse-resize !important;
  opacity: 0.95;
}

/* Reset after interaction completes */
body.drag-complete .react-grid-item {
  @apply transition-all duration-400 ease-out;
}

/* Grid Layout container styles */
.react-grid-layout {
  @apply relative;
  -webkit-user-drag: none;
}

/* Dragging/resizing states for the entire grid */
.react-grid-layout--dragging,
.react-grid-layout--resizing {
  @apply cursor-move select-none;
}

.react-grid-layout--dragging *,
.react-grid-layout--resizing * {
  @apply select-none;
  cursor: inherit !important;
}

/* Subtle visual states for non-active items during drag/resize */
body.react-grid-layout--dragging .react-grid-item:not(.react-draggable-dragging) {
  @apply opacity-80 transition-opacity duration-300 ease-in;
  filter: saturate(0.95);
}

body.react-grid-layout--resizing .react-grid-item:not(.resizing) {
  @apply opacity-90 transition-opacity duration-300 ease-in;
}

/* 
 * =================================
 * DRAG DIRECTION ANIMATION STYLES (Production Match)
 * =================================
 */

/* Base transition for all drag states */
.react-grid-item.react-draggable-dragging {
  transition: transform 0.2s cubic-bezier(0.34, 1.56, 0.64, 1) !important;
}

/* Left drag animation with rotation */
.react-grid-item.dragging-left {
  transform: rotate(-5deg) !important;
}

/* Right drag animation with rotation */
.react-grid-item.dragging-right {
  transform: rotate(5deg) !important;
}

/* When drag stops, animate back to normal with a spring effect */
.react-grid-item.drag-rebound {
  transition: transform 0.5s cubic-bezier(0.25, 0.1, 0.25, 1.5) !important;
  transform: rotate(0deg) !important;
}

/* 
 * =================================
 * PLACEHOLDER STYLES (Production Match)
 * =================================
 */

/* Grid Placeholder - Apple-inspired design */
.react-grid-placeholder,
.react-grid-item.react-grid-placeholder,
.react-draggable-dragging.react-grid-placeholder,
.react-grid-item.dropping {
  border-radius: var(--border-radius-standard) !important;
  z-index: 2;
  background: linear-gradient(to bottom, rgba(250, 250, 252, 0.3), rgba(248, 248, 250, 0.3)) !important;
  border: 0.5px solid rgba(0, 0, 0, 0.03) !important;
  box-shadow: 
    0 1px 3px rgba(0, 0, 0, 0.02),
    0 2px 6px rgba(0, 0, 0, 0.01) !important;
  outline: none;
  transition: 
    opacity 0.2s cubic-bezier(0.25, 0.1, 0.25, 1),
    background 0.3s cubic-bezier(0.25, 0.1, 0.25, 1),
    box-shadow 0.3s cubic-bezier(0.25, 0.1, 0.25, 1) !important;
  opacity: 0.25 !important;
  
  @apply dark:border-white/5;
}

/* Dark mode specific adjustments */
.dark .react-grid-placeholder,
.dark .react-grid-item.react-grid-placeholder,
.dark .react-draggable-dragging.react-grid-placeholder,
.dark .react-grid-item.dropping {
  background-image: linear-gradient(to bottom, rgba(60, 60, 67, 0.2), rgba(50, 50, 57, 0.2)) !important;
  box-shadow: 
    0 1px 3px rgba(0, 0, 0, 0.05),
    0 2px 5px rgba(0, 0, 0, 0.03) !important;
  outline: none;
  opacity: 0.3 !important;
}

/* Active state */
.react-grid-item.react-draggable-dragging.react-grid-placeholder,
.react-grid-item.dropping {
  opacity: 0.4 !important;
  box-shadow: 
    0 2px 6px rgba(0, 0, 0, 0.04),
    0 4px 12px rgba(0, 0, 0, 0.02) !important;
  border: 0.5px solid rgba(0, 0, 0, 0.05) !important;
  @apply dark:border-white/10;
}

/* Ensure border radius is maintained during CSS transforms */
.react-grid-item.cssTransforms {
  border-radius: var(--border-radius-standard) !important;
  transform-origin: center center !important;
}

/* Resize Handle */
.react-resizable-handle,
.react-resizable .react-resizable-handle,
.react-grid-item .react-resizable-handle {
  @apply absolute w-[30px] h-[30px] bottom-0 right-0 bg-none pointer-events-auto 
         cursor-se-resize z-10 opacity-0 transition-opacity duration-500 ease-in-out;
}

.react-resizable-handle::after,
.react-resizable .react-resizable-handle::after,
.react-grid-item .react-resizable-handle::after {
  @apply content-[''] absolute bottom-1 right-1 w-[30px] h-[30px] border-b-2 border-r-2 border-black/20 dark:border-white/30;
  border-radius: 0 0 var(--border-radius-standard) 0;
}

.widget-container:hover .react-resizable-handle,
.react-grid-item:hover .react-resizable-handle {
  @apply opacity-100;
}

/* Adding a subtle hover effect to grid items */
.react-grid-item:hover {
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.06);
  @apply dark:shadow-lg dark:shadow-black/20;
}

/* 
 * =================================
 * 5. THEME SUPPORT (Production Match)
 * =================================
 */

/* App background and text colors */
.app-background {
  background-color: var(--background);
  color: var(--foreground);
  transition: background-color 0.2s ease, color 0.2s ease;
}

/* Dark mode support */
.dark .app-background {
  background-color: var(--background);
  color: var(--foreground);
}

/* Widget styling */
.app-widget {
  background-color: var(--card);
  color: var(--card-foreground);
  border: 1px solid var(--border);
  border-radius: var(--border-radius-standard);
}

/* Card elements */
.app-card {
  background-color: var(--card);
  color: var(--card-foreground);
  border: 1px solid var(--border);
}

/* Button styling */
.app-button-primary {
  background-color: var(--primary);
  color: var(--primary-foreground);
}

.app-button-secondary {
  background-color: var(--secondary);
  color: var(--secondary-foreground);
}

/* Input field styling */
.app-input {
  background-color: var(--input);
  border: 1px solid var(--border);
  color: var(--foreground);
}

/* 
 * =================================
 * 6. RESPONSIVE LAYOUT STYLES
 * =================================
 */

/* Widget Type-specific Styles */
.widget-wrapper {
  @apply h-full w-full;
}

.tablet-widget .widget-container {
  min-height: 150px;
}

.desktop-widget .widget-container {
  min-height: 100px;
}

/* Mobile responsive adjustments */
@media (max-width: 768px) {
  .widget-container {
    @apply p-3;
    border-radius: calc(var(--border-radius-standard) * 0.8);
  }
}

@media (min-width: 1025px) {
  .widget-container {
    @apply p-4;
  }
}